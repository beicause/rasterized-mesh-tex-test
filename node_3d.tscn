[gd_scene load_steps=13 format=3 uid="uid://4nhaam2rmekj"]

[ext_resource type="Texture2D" uid="uid://cgsqdtqsi5l4x" path="res://textures/texture3.tres" id="1_noarx"]
[ext_resource type="Texture2D" uid="uid://1eaojdul3w76" path="res://textures/texture4.tres" id="2_a0tk4"]

[sub_resource type="SphereMesh" id="SphereMesh_1bvp3"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_lquwl"]
shading_mode = 0
albedo_texture = ExtResource("1_noarx")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_1bvp3"]
shading_mode = 0
albedo_texture = ExtResource("2_a0tk4")

[sub_resource type="BoxMesh" id="BoxMesh_1bvp3"]

[sub_resource type="Shader" id="Shader_noarx"]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D normal_tex:source_color;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	ALBEDO = texture(normal_tex,UV).rgb;
}

//void light() {
//	// Called for every pixel for every light affecting the material.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="Shader" id="Shader_a0tk4"]
code = "shader_type mesh_rasterizer;

uniform mat4 projection;

void vertex() {
    POSITION = projection * POSITION;
}

void fragment() {
    OUTPUT_COLOR.rgb = NORMAL;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_r3fl7"]
shader = SubResource("Shader_a0tk4")
shader_parameter/projection = Projection(1, 0, 0, 0, 0, 1, 0, 0, -0.73, 0.73, 1, 0, 0.135, -0.08, 0.1, 1)

[sub_resource type="BoxMesh" id="BoxMesh_noarx"]

[sub_resource type="RasterizedMeshTexture" id="RasterizedMeshTexture_jka67"]
width = 512
height = 512
mesh = SubResource("BoxMesh_noarx")
material = SubResource("ShaderMaterial_r3fl7")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_a0tk4"]
render_priority = 0
shader = SubResource("Shader_noarx")
shader_parameter/normal_tex = SubResource("RasterizedMeshTexture_jka67")

[node name="Node3D" type="Node3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(-0.96917987, 0, -0.24635604, 0, 1, 0, 0.24635604, 0, -0.96917987, -0.297318, 0, -0.000807762)
mesh = SubResource("SphereMesh_1bvp3")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("StandardMaterial3D_lquwl")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.7969785, 0, 0)
material_override = SubResource("StandardMaterial3D_1bvp3")
mesh = SubResource("BoxMesh_1bvp3")
skeleton = NodePath("../..")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.28027856, 0, 1.55646)

[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.6658732, 0, 0)
material_override = SubResource("ShaderMaterial_a0tk4")
mesh = SubResource("BoxMesh_noarx")
