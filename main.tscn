[gd_scene load_steps=17 format=3 uid="uid://2bfqeuhf8nf"]

[ext_resource type="Texture2D" uid="uid://cgsqdtqsi5l4x" path="res://textures/texture3.tres" id="1_7mycd"]
[ext_resource type="PackedScene" uid="uid://4nhaam2rmekj" path="res://node_3d.tscn" id="1_lquwl"]
[ext_resource type="Texture2D" uid="uid://cltqr8lscp6yk" path="res://textures/texture2.tres" id="2_1bvp3"]
[ext_resource type="Texture2D" uid="uid://0pt2gqmbim0q" path="res://textures/texture1.tres" id="3_lquwl"]
[ext_resource type="Texture2D" uid="uid://1eaojdul3w76" path="res://textures/texture4.tres" id="5_lquwl"]
[ext_resource type="Texture2D" uid="uid://8uttoilui1ff" path="res://icon.svg" id="6_7mycd"]

[sub_resource type="DrawableTexture2D" id="DrawableTexture2D_7mycd"]

[sub_resource type="GDScript" id="GDScript_7mycd"]
script/source = "@tool
extends Sprite2D

func _ready() -> void:
	var tex_drawable = DrawableTexture2D.new()
	tex_drawable.setup(Vector2i(256,256),RenderingDevice.DATA_FORMAT_R8G8B8A8_SRGB)
	tex_drawable.blit_rect(Rect2i(0,0,256,256),load(\"res://icon.svg\"),Color.WHITE,RenderingServer.BLEND_MODE_CLEAR,Color())
	tex_drawable.blit_rect(Rect2i(0,0,50,50),load(\"res://icon.svg\"),Color.RED,RenderingServer.BLEND_MODE_ADD,Color())
	texture=tex_drawable
"

[sub_resource type="Shader" id="Shader_lquwl"]
code = "		shader_type mesh_rasterizer;

		uniform vec2 size;
		uniform vec2 offset;
		uniform vec2 region;
		uniform sampler2D source_tex: source_color;
		uniform vec4 modulate: source_color = vec4(1.0);

		void vertex(){
			POSITION.xy = region/size * POSITION.xy + (offset-(size-region)/2.0)/size;
			POSITION.w=0.5;
		}

		void fragment(){
			OUTPUT_COLOR = modulate * texture(source_tex, UV);
		}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7mycd"]
shader = SubResource("Shader_lquwl")
shader_parameter/size = Vector2(256, 256)
shader_parameter/offset = Vector2(50, 50)
shader_parameter/region = Vector2(55.87, 128)
shader_parameter/source_tex = ExtResource("6_7mycd")
shader_parameter/modulate = Color(1, 1, 1, 1)

[sub_resource type="QuadMesh" id="QuadMesh_272bh"]

[sub_resource type="RasterizedMeshTexture" id="RasterizedMeshTexture_5vw27"]
clear_color = Color(0, 0, 0, 1)
mesh = SubResource("QuadMesh_272bh")
material = SubResource("ShaderMaterial_7mycd")

[sub_resource type="Shader" id="Shader_7mycd"]
code = "shader_type mesh_rasterizer;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	OUTPUT_COLOR=vec4(1.0);
	// Called for every pixel the material is visible on.
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_272bh"]
shader = SubResource("Shader_7mycd")

[sub_resource type="QuadMesh" id="QuadMesh_7mycd"]

[sub_resource type="RasterizedMeshTexture" id="RasterizedMeshTexture_7mycd"]
mesh = SubResource("QuadMesh_7mycd")
material = SubResource("ShaderMaterial_272bh")

[node name="Node2D" type="Node2D"]

[node name="Node3D" parent="." instance=ExtResource("1_lquwl")]

[node name="Sprite2D7" type="Sprite2D" parent="."]
position = Vector2(797, 164)
texture = ExtResource("2_1bvp3")

[node name="Sprite2D" type="Sprite2D" parent="."]
position = Vector2(262, 187)
texture = ExtResource("3_lquwl")

[node name="Noise" type="Sprite2D" parent="."]
position = Vector2(1095, 885)
texture = ExtResource("5_lquwl")

[node name="Texture1" type="Sprite2D" parent="."]
position = Vector2(1036, 495)
texture = ExtResource("1_7mycd")

[node name="Sprite2D2" type="Sprite2D" parent="."]
position = Vector2(236, 503)
texture = SubResource("DrawableTexture2D_7mycd")
script = SubResource("GDScript_7mycd")

[node name="Sprite2D3" type="Sprite2D" parent="."]
position = Vector2(273, 938)
texture = SubResource("RasterizedMeshTexture_5vw27")

[node name="Sprite2D4" type="Sprite2D" parent="."]
position = Vector2(462, 913)
texture = SubResource("RasterizedMeshTexture_7mycd")
